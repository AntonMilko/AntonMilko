//1. Дано целое число N(> 0).Сформировать и вывести целочисленный массив размера N, содержащий N первых положительных нечетных чисел : 1, 3, 5, . . . .
//2. Дано целое число N(> 1), а также первый член A и знаменатель D геометрической прогрессии.Сформировать и вывести массив размера N, содержащий N первых членов данной прогрессии : A, A·D, A·D2, A·D3, . . .
//3. Даны целые числа N(> 2), A и B.Сформировать и вывести целочисленный массив размера N, первый элемент которого равен A, второй равен B, а каждый последующий элемент равен сумме всех предыдущих
//4. Дан массив A размера N.Вывести его элементы в следующем порядке : A1, AN, A2, AN−1, A3, AN−2,
//5. Дан массив A размера N.Вывести вначале его элементы с нечетными номерами в порядке возрастания номеров, а затем — элементы с четными номерами в порядке убывания номеров


#include <iostream>

using namespace std;

void funk1()
{
    int a[100];
    int n;

    cout << "N: ";
    cin >> n;

    for (int i = 0; i < n; i++)
        a[i] = 1 + i * 2;

    for (int i = 0; i < n; ++i)
        cout << "a[" << i << "]=" << a[i] << endl;
}



void funk2() 
{
    int a[10];
    int d, n, i, pow;
    

    cout << "N: ";
    cin >> n;

    cout << "A: ";
    cin >> a[0];

    cout << "D: ";
    cin >> d;
    
    pow = 1;

    for (i = 1; i < n; ++i) 
    {
        pow *= d;
        a[i] = a[0] * pow;
    }
    
    for (int i = 0; i <= n; i++)
    {
        cout << i << " = "<< a[i] << endl;
    }
}

void funk3() 
{
    int a[10];
    int n, i;

    cout << "N: ";
    cin >> n;

    cout << "A: ";
    cin >> a[0];

    cout << "B: ";
    cin >> a[1];

    for (i = 2; i < n; ++i) 
    {
        a[i] = 0;
        int i2;
        for (i2 = 0; i2 < i; ++i2) a[i] += a[i2];
    }

    for (int i = 0; i <= n; i++)
    {
        cout << i << " = " << a[i] << endl;
    }


}
void funk4() 
{
    int a[10];
    int n, i;

    cout << "N: ";
    cin >> n;

    for (i = 0; i < n; ++i) 
    {
        cout << "a["<<i+1<<"]:";
        cin >> a[i];
    }

    for (i = 0; i < n / 2 + 1; i += 2) 
    {
        cout <<"A["<< i << "] = " << a[i] << "\n";

        if (i < n / 2) cout << "A["<< i << "] = " << a[i + 1] << "\n";
        if (n - i - 1 > n / 2) cout << "A[" << i << "] = " << a[n - i - 1] << "\n";
        if (n - i - 2 > n / 2) cout << "A[" << i << "] = " << a[n - i - 2] << "\n";
    }

}
void funk5() 
{
    int a[10];
    int n, i;

    cout << "N: ";
    cin >> n;

    for (i = 0; i < n; ++i)
    {
        cout << "a[" << i + 1 << "]:";
        cin >> a[i];
    }
    cout << "\n";

    for (i = 0; i < n; i += 2)  cout << "A[" << i << "] = " << a[i] << "\n";
    cout << "\n";

    for (i = n - (n % 2) - 1; i >= 1; i -= 2)  cout << "A[" << i << "] = " << a[i] << "\n";

}



int main()
{
	setlocale(LC_ALL, "Russian");

	funk1();
	funk2();
	funk3();
	funk4();
	funk5();

}

