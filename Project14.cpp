#include <iostream>
using namespace std;

void func_Proc1() 
{
    //1. Даны целые положительные числа A и B (A < B). 
    //Вывести все целые числа от A до B включительно; при этом каждое число должно 
    //выводиться столько раз, каково его значение (например, число 3 выводится 3 раза).
    
    int A, B;
    

    cout << "целое положительное число A (A < B): ";
    cin >> A;
    
    cout << "целое положительное число B (B > A): ";
    cin >> B;
    cout << "\n";

    int i = A;
    
    for (i; i <= B; i++)
    {
        for (int j = 0; j < i; j++)
        {
            cout << i << " ";
        }

    }
}


void func_Proc2()
{
    //2. Даны положительные числа A и B(A > B).
    //На отрезке длины A размещено максимально возможное количество отрезков длины B(без наложений).
    //Не используя операции умножения и деления, найти длину незанятой части отрезка A.

    int A, B;
    cout << "целое положительное число A (A < B): ";
    cin >> A;

    cout << "целое положительное число B (B > A): ";
    cin >> B;
    cout << "\n";
    
    // пока А - В > 0, отнимаем В. write(A)
    while ((A - B) >= 0)
    {
        A = A - B;
    }
    cout << B - A << "\n";
}

void func_Proc3()
{
    //3. Дано целое число N(> 1).
    //Вывести наименьшее из целых чисел K, для которых сумма 1 + 2 + . . . + K будет больше или равна N, и саму эту сумму.

    int N;
    int K = 0;
    int S = 0;
    
    cout << "Введите целое число N (>1): ";
    cin >> N;
    
    while (S <= N) {
        ++K;
        S += K;
    }
    cout << "Наименьшее из целых чисел K, для которых сумма 1 + 2 + ... + K будет больше или равна N:   " << "K= " << K << "\n";

}

void func_Proc4()
{
    //4. Начальный вклад в банке равен 1000 руб.
    //Через каждый месяц размер вклада увеличивается на P процентов от имеющейся 
    //суммы(P — вещественное число, 0 < P < 25).
    //По данному P определить, через сколько месяцев размер вклада превысит 1100 руб., 
    //и вывести найденное количество месяцев K(целое число) и итоговый размер вклада S(вещественное число).

    float p;
    cout << "P процентов : ";
    cin >> p;
    cout << "\n";

    int k = 1;
    float s = 1000;
    while (s <= 1100) {
        ++k;
        s += s * p / 100;
    }
    cout << "количество месяцев K: " << k << "\n" << "итоговый размер вклада S:" << s;

}

void func_Proc5()
{
    //5. Даны целые положительные числа A и B.Найти их наибольший общий делитель(НОД), используя алгоритм Евклида

    int A, B;

    cout << "Введите 2 числа: ";
    cin >> A >> B;
    cout << "\n";

    while (A != B) {
        if (A > B)
            A = A - B;
        else
            B = B - A;
    }

    cout << "НОД этих чисел: " << A;
}

void func_Proc6()
{
    //6. Дано целое число N(> 1), являющееся числом Фибоначчи : N = FK.
    //Найти целое число K — порядковый номер числа Фибоначчи N.

    int n;
    cout << "целое число N(> 1): ";
    cin >> n;
    cout << "\n";

    int f1 = 1, f2 = 1, f = 0, k = 2;

    while (f < n) {
        ++k;
        f = f2 + f1;
        f2 = f1;
        f1 = f;
    }
    cout << "порядковый номер числа Фибоначчи N: " << k << "\n";
}

int main()
{
    setlocale(LC_ALL, "Rus");
    
    int i = 1;

    cout << "ВВЕДИТЕ НОМЕР ЗАДАНИЯ 1-6: ";
    cin >> i;
    cout << "\n";
    
    switch (i)
    {
    case 1:
        func_Proc1();
        break;
    case 2:
        func_Proc2();
        break;
    case 3:
        func_Proc3();
        break;
    case 4:
        func_Proc4();
        break;
    case 5:
        func_Proc5();
        break;
    case 6:
        func_Proc6();
        break;

    default:
        break;
    }
    

}

